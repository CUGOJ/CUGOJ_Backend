// <auto-generated />
using System;
using CUGOJ.Backend.Base.DAO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CUGOJ.Backend.Base.UpdateSqlSnapshot.Migrations.v4initial
{
    [DbContext(typeof(CUGOJContext))]
    [Migration("20221111170700_v4-initial")]
    partial class v4initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Authorize", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("Action")
                        .HasColumnType("bigint")
                        .HasColumnName("action")
                        .HasComment("授权的权限集合,按位表示");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<long>("GranteeId")
                        .HasColumnType("bigint")
                        .HasColumnName("grantee_id")
                        .HasComment("被授权对象Id");

                    b.Property<int>("GranteeType")
                        .HasColumnType("int")
                        .HasColumnName("grantee_type")
                        .HasComment("被授权对象种类");

                    b.Property<long>("ResourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("resource_id")
                        .HasComment("资源Id");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int")
                        .HasColumnName("resource_type")
                        .HasComment("资源类型");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role")
                        .HasComment("被授权对象的");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasComment("最后更新时间");

                    b.HasKey("Id");

                    b.HasIndex("GranteeId", "ResourceId");

                    b.ToTable("authorize");
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ContestBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("比赛ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<DateTime>("EndTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("结束时间");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id")
                        .HasComment("承办组织");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("owner_id")
                        .HasComment("所有者");

                    b.Property<string>("Profile")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("profile")
                        .HasComment("赛事的简单描述");

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("开始时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("比赛状态枚举");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("title")
                        .HasComment("比赛名称");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("赛事类型");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.Property<string>("Writers")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("writers")
                        .HasComment("出题人");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Type", "OwnerId" }, "idx_type_owner");

                    b.ToTable("contest_base", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ContestContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("比赛内容ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content")
                        .HasComment("赛事描述文字");

                    b.Property<long>("ContestId")
                        .HasColumnType("bigint")
                        .HasColumnName("contest_id")
                        .HasComment("比赛ID");

                    b.HasKey("Id");

                    b.ToTable("contest_content", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ContestProblem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("赛题ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AcceptedCount")
                        .HasColumnType("bigint")
                        .HasColumnName("accepted_count")
                        .HasComment("AC数");

                    b.Property<long>("ContestId")
                        .HasColumnType("bigint")
                        .HasColumnName("contest_id")
                        .HasComment("比赛ID");

                    b.Property<long>("ProblemId")
                        .HasColumnType("bigint")
                        .HasColumnName("problem_id")
                        .HasComment("题目ID");

                    b.Property<string>("Properties")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("properties")
                        .HasComment("分数、语言等信息的JSON格式");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.Property<long>("SubmissionCount")
                        .HasColumnType("bigint")
                        .HasColumnName("submission_count")
                        .HasComment("提交数");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnName("version")
                        .HasComment("版本");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContestId" }, "idx_contest");

                    b.ToTable("contest_problem", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ObjectTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("主体-标签ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<long>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("tag_id")
                        .HasComment("标签ID");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_id")
                        .HasComment("主体ID");

                    b.Property<int>("TargetType")
                        .HasColumnType("int")
                        .HasColumnName("target_type")
                        .HasComment("目标主体类型");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TargetId", "TargetType" }, "idx_target_type_id");

                    b.ToTable("object_tag", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name")
                        .HasComment("组织名");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int")
                        .HasColumnName("organization_type")
                        .HasComment("组织类型");

                    b.Property<long>("Owner")
                        .HasColumnType("bigint")
                        .HasColumnName("owner")
                        .HasComment("组织所有人");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id")
                        .HasComment("父组织");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role")
                        .HasComment("父组织中的身份");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("signature")
                        .HasComment("个性签名");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Owner" }, "idx_owner");

                    b.HasIndex(new[] { "ParentId" }, "idx_parent");

                    b.ToTable("organization", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ProblemBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题目ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("AcceptedCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("accepted_count")
                        .HasDefaultValueSql("'0'")
                        .HasComment("通过数");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<string>("Properties")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("properties")
                        .HasComment("针对不同题目类型的描述JSON");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("show_id")
                        .HasComment("展示的题号");

                    b.Property<long>("SourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("source_id")
                        .HasComment("题目来源");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("题目状态");

                    b.Property<long?>("SubmissionCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("submission_count")
                        .HasDefaultValueSql("'0'")
                        .HasComment("提交数");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("title")
                        .HasComment("题目标题");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("题目类型");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.Property<long?>("Version")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("version")
                        .HasDefaultValueSql("'0'")
                        .HasComment("版本");

                    b.Property<long>("WriterId")
                        .HasColumnType("bigint")
                        .HasColumnName("writer_id")
                        .HasComment("出题人ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Type", "SourceId", "ShowId" }, "idx_type_source_show");

                    b.HasIndex(new[] { "Type", "WriterId" }, "idx_type_writer");

                    b.ToTable("problem_base", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ProblemContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题目内容ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content")
                        .HasComment("题目具体内容");

                    b.Property<long>("ProblemId")
                        .HasColumnType("bigint")
                        .HasColumnName("problem_id")
                        .HasComment("题目ID");

                    b.HasKey("Id");

                    b.ToTable("problem_content", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Problemset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题单ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id")
                        .HasComment("创建者ID");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("description")
                        .HasComment("简短描述");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("title")
                        .HasComment("题单名称");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CreatorId" }, "idx_creator");

                    b.ToTable("problemset", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ProblemsetProblem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题单-题目ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ProblemId")
                        .HasColumnType("bigint")
                        .HasColumnName("problem_id")
                        .HasComment("题目ID");

                    b.Property<long>("ProblemsetId")
                        .HasColumnType("bigint")
                        .HasColumnName("problemset_id")
                        .HasComment("题单ID");

                    b.Property<string>("Properties")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("properties")
                        .HasComment("JSON");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProblemsetId" }, "idx_problemset_id");

                    b.ToTable("problemset_problem", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.ProblemSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("name")
                        .HasComment("题目来源名");

                    b.Property<string>("Properties")
                        .HasMaxLength(4098)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("properties")
                        .HasComment("题目show_id组合源链接策略");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("url")
                        .HasComment("题目源主页");

                    b.HasKey("Id");

                    b.ToTable("problem_source", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Register", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ContestId")
                        .HasColumnType("bigint")
                        .HasColumnName("contest_id")
                        .HasComment("比赛ID");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<string>("Extra")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("extra")
                        .HasComment("额外信息");

                    b.Property<long>("RegistrantId")
                        .HasColumnType("bigint")
                        .HasColumnName("registrant_id")
                        .HasComment("注册人ID");

                    b.Property<int>("RegistrantType")
                        .HasColumnType("int")
                        .HasColumnName("registrant_type")
                        .HasComment("注册人类型");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("比赛状态枚举");

                    b.Property<long?>("TeamId")
                        .HasColumnType("bigint")
                        .HasColumnName("team_id")
                        .HasComment("队伍ID");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContestId", "Status" }, "idx_contest")
                        .HasDatabaseName("idx_contest1");

                    b.HasIndex(new[] { "RegistrantId", "Status" }, "idx_registrant");

                    b.ToTable("register", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Score", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("ScoreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AggId")
                        .HasColumnType("bigint")
                        .HasColumnName("agg_id")
                        .HasComment("聚合基准");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("name")
                        .HasComment("Score名称");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint")
                        .HasColumnName("target_id")
                        .HasComment("目标主体ID");

                    b.Property<int>("TargetType")
                        .HasColumnType("int")
                        .HasColumnName("target_type")
                        .HasComment("目标主体类型");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("类型");

                    b.Property<long>("Value")
                        .HasColumnType("bigint")
                        .HasColumnName("value")
                        .HasComment("得分");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Type", "AggId", "Status", "Value" }, "idx_type_agg_id_status_value");

                    b.ToTable("score", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.SolutionBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题解ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ContestId")
                        .HasColumnType("bigint")
                        .HasColumnName("contest_id")
                        .HasComment("关联的比赛");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<long?>("ProblemId")
                        .HasColumnType("bigint")
                        .HasColumnName("problem_id")
                        .HasComment("关联的题目");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.Property<long>("WriterId")
                        .HasColumnType("bigint")
                        .HasColumnName("writer_id")
                        .HasComment("作者ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContestId" }, "idx_contest")
                        .HasDatabaseName("idx_contest2");

                    b.HasIndex(new[] { "ProblemId" }, "idx_problem");

                    b.HasIndex(new[] { "WriterId" }, "idx_writer");

                    b.ToTable("solution_base", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.SolutionContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("题解内容ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content")
                        .HasComment("题解内容");

                    b.Property<long>("SolutionId")
                        .HasColumnType("bigint")
                        .HasColumnName("solution_id")
                        .HasComment("题解ID");

                    b.HasKey("Id");

                    b.ToTable("solution_content", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.SubmissionBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("提交ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ContestId")
                        .HasColumnType("bigint")
                        .HasColumnName("contest_id")
                        .HasComment("关联的比赛");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<long?>("ProblemId")
                        .HasColumnType("bigint")
                        .HasColumnName("problem_id")
                        .HasComment("关联的题目");

                    b.Property<string>("Properties")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("properties")
                        .HasComment("特定配置JSON");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("提交结果");

                    b.Property<DateTime>("SubmitTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("submit_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("提交时间");

                    b.Property<long>("SubmitterId")
                        .HasColumnType("bigint")
                        .HasColumnName("submitter_id")
                        .HasComment("提交者ID");

                    b.Property<int>("SubmitterType")
                        .HasColumnType("int")
                        .HasColumnName("submitter_type")
                        .HasComment("提交者类型（团队或个人）");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("提交类型");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContestId", "CreateTime" }, "idx_contest_create_time");

                    b.HasIndex(new[] { "ContestId", "ProblemId" }, "idx_contest_problem");

                    b.HasIndex(new[] { "ContestId", "SubmitterId" }, "idx_contest_submitter");

                    b.HasIndex(new[] { "SubmitterId", "ProblemId" }, "idx_submitter_problem");

                    b.ToTable("submission_base", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.SubmissionContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("提交内容ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content")
                        .HasComment("提交内容");

                    b.Property<long>("SubmissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("submission_id")
                        .HasComment("提交ID");

                    b.HasKey("Id");

                    b.ToTable("submission_content", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("标签ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("color")
                        .HasComment("标签颜色");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("name")
                        .HasComment("标签名称");

                    b.Property<string>("Properties")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("properties")
                        .HasComment("配置项JSON");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态枚举");

                    b.Property<int>("TargetType")
                        .HasColumnType("int")
                        .HasColumnName("target_type")
                        .HasComment("目标主体类型");

                    b.HasKey("Id");

                    b.ToTable("tag", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("description")
                        .HasComment("队伍介绍");

                    b.Property<long>("Leader")
                        .HasColumnType("bigint")
                        .HasColumnName("leader")
                        .HasComment("队长");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name")
                        .HasComment("队伍名");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id")
                        .HasComment("所属组织");

                    b.Property<string>("Signature")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("signature")
                        .HasComment("个性签名");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.HasKey("Id");

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.TeamUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint")
                        .HasColumnName("team_id")
                        .HasComment("队伍Id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("用户Id");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type")
                        .HasComment("用户类型");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TeamId" }, "idx_team");

                    b.HasIndex(new[] { "UserId" }, "idx_user");

                    b.ToTable("team_user", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AllowedIp")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("allowed_ip")
                        .HasComment("允许访问的IP");

                    b.Property<string>("Avatar")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("email")
                        .HasComment("邮箱");

                    b.Property<string>("Extra")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("extra")
                        .HasComment("额外信息");

                    b.Property<string>("Nickname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("nickname")
                        .HasComment("昵称");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id")
                        .HasComment("所属组织");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("phone")
                        .HasComment("电话号码");

                    b.Property<string>("Realname")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("realname")
                        .HasComment("真名");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(130)
                        .HasColumnType("nvarchar(130)")
                        .HasColumnName("salt")
                        .HasComment("密码加盐");

                    b.Property<string>("Signature")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("signature")
                        .HasComment("个性签名");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("更新时间");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("用户ID");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_type")
                        .HasDefaultValueSql("'3'")
                        .HasComment("用户类型1:super admin,2:admin,3:user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("username")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "idx_email");

                    b.HasIndex(new[] { "Phone" }, "idx_phone");

                    b.HasIndex(new[] { "Status" }, "idx_status");

                    b.HasIndex(new[] { "UserId" }, "idx_uid");

                    b.HasIndex(new[] { "Username" }, "idx_user_name");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("自增ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("device_id")
                        .HasComment("设备ID");

                    b.Property<long>("Ip")
                        .HasColumnType("bigint")
                        .HasColumnName("ip")
                        .HasComment("登录IP");

                    b.Property<int>("LoginType")
                        .HasColumnType("int")
                        .HasColumnName("login_type")
                        .HasComment("登录类型");

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasColumnName("platform")
                        .HasComment("平台");

                    b.Property<DateTime>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("time")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("创建时间");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("用户ID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId", "DeviceId", "Time" }, "idx_user_device_time");

                    b.HasIndex(new[] { "UserId", "Platform", "Time" }, "idx_user_platform_time");

                    b.HasIndex(new[] { "UserId", "Time" }, "idx_user_time");

                    b.ToTable("user_login", (string)null);
                });

            modelBuilder.Entity("CUGOJ.Backend.Share.Common.Models.UserOrganizationLink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("主键");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("create_time")
                        .HasComment("创建时间");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id")
                        .HasComment("组织Id");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role")
                        .HasComment("用户在组织内的角色");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time")
                        .HasComment("最后更新时间");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("用户Id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("OrganizationId", "Role");

                    b.ToTable("user_organization_link");
                });
#pragma warning restore 612, 618
        }
    }
}
